{
    "navbar": {
        "brand": "Task Scheduler",
        "tasks": "Tasks",
        "logs": "Logs",
        "statistics": "Statistics",
        "calendars": "Calendars",
        "users": "Users",
        "logout": "Logout",
        "language": "Language"
    },
    "loginPage": {
        "title": "Login - Task Scheduler",
        "header": "Task Scheduler Login",
        "usernameLabel": "Username",
        "usernamePlaceholder": "Enter username",
        "passwordLabel": "Password",
        "passwordPlaceholder": "Enter password",
        "loginButton": "Login",
        "loginFailed": "Login Failed: Invalid username or password."
    },
    "common": {
        "loading": "Loading...",
        "actions": "Actions",
        "edit": "Edit",
        "delete": "Delete",
        "save": "Save",
        "close": "Close",
        "error": "Error",
        "confirm": "Confirm",
        "cancel": "Cancel",
        "success": "Success",
        "warning": "Warning",
        "info": "Info",
        "noResults": "No Results",
        "startDate": "Start Date",
        "endDate": "End Date",
        "startTime": "Start Time",
        "endTime": "End Time",
        "all": "All",
        "yes": "Yes",
        "no": "No",
        "refresh": "Refresh",
        "search": "Search",
        "filter": "Filter",
        "clear": "Clear",
        "apply": "Apply",
        "reset": "Reset",
        "name": "Name",
        "description": "Description",
        "type": "Type",
        "status": "Status",
        "id": "ID",
        "group": "Group",
        "active": "Active",
        "inactive": "Inactive",
        "enabled": "Enabled",
        "disabled": "Disabled",
        "hidden": "Hidden",
        "visible": "Visible",
        "required": "Required",
        "optional": "Optional",
        "submit": "Submit",
        "create": "Create",
        "update": "Update",
        "remove": "Remove",
        "add": "Add",
        "back": "Back",
        "next": "Next",
        "previous": "Previous",
        "finish": "Finish",
        "confirm.delete": "Are you sure you want to delete? This cannot be undone."
    },
    "tasksPage": {
        "title": "Task Management - Task Scheduler",
        "header": "Task Management",
        "addTaskBtn": "Add Task",
        "table": {
            "id": "ID",
            "group": "Group",
            "name": "Name",
            "cron": "CRON",
            "type": "Type",
            "status": "Status",
            "execMode": "Exec Mode",
            "actions": "Actions",
            "statusActive": "Active",
            "statusInactive": "Inactive",
            "historyBtnShort": "History",
            "historyBtn": "View Execution History",
            "editBtn": "Edit Task",
            "deleteBtn": "Delete Task",
            "triggerBtnShort": "Trigger",
            "triggerBtn": "Trigger Task Manually",
            "disableBtnShort": "Disable",
            "disableBtn": "Disable Task",
            "enableBtnShort": "Enable",
            "enableBtn": "Enable Task"
        },
        "filters": {
            "header": "Task Filters",
            "taskNameLabel": "Task Name",
            "taskNamePlaceholder": "Enter task name...",
            "taskGroupLabel": "Task Group",
            "allGroupsOption": "All Groups",
            "taskTypeLabel": "Task Type",
            "allTypesOption": "All Types",
            "statusLabel": "Status",
            "allStatusesOption": "All Statuses",
            "statusActive": "Active",
            "statusInactive": "Inactive",
            "applyBtn": "Apply Filters",
            "resetBtn": "Reset Filters"
        },
        "statusLabels": {
            "active": "Active",
            "inactive": "Inactive",
            "running": "Running",
            "failed": "Failed"
        },
        "executionModes": {
            "broadcast": "Broadcast (All Instances)",
            "cluster": "Cluster (Single Instance via Lock)"
        },
        "taskTypes": {
            "bean": "Bean Task",
            "http": "HTTP Task",
            "shell": "Shell Script Task",
            "workflow": "Workflow Task"
        },
        "actions": {
            "edit": "Edit",
            "delete": "Delete",
            "run": "Run Now",
            "activate": "Activate",
            "deactivate": "Deactivate",
            "viewLogs": "View Logs",
            "showDetails": "Show Details"
        },
        "modal": {
            "title": "Add/Edit Task",
            "taskNameLabel": "Task Name",
            "taskNamePlaceholder": "Enter task name",
            "taskGroupLabel": "Task Group",
            "taskGroupPlaceholder": "Enter task group",
            "cronLabel": "CRON Expression",
            "validateCronBtn": "Validate & Show Next Runtimes",
            "descriptionLabel": "Description",
            "executionModeLabel": "Execution Mode",
            "executionModeBroadcast": "Broadcast (All Instances)",
            "executionModeCluster": "Cluster (Single Instance via Lock)",
            "taskTypeLabel": "Task Type",
            "advancedSettingsHeader": "Advanced Settings",
            "formatJsonBtn": "Format JSON",
            "saveBtn": "Save Task",
            "closeBtn": "Close",
            "calendarLabel": "Calendar",
            "calendarPlaceholder": "Select a calendar (optional)",
            "noCalendarOption": "No Calendar (Always Run)",
            "missingCronError": "Please provide a valid CRON expression",
            "nextRuns": "Next runs:",
            "invalidCronExpression": "Invalid CRON expression",
            "calendarGroupDefaultOption": "-- Please select calendar -- ",
            "startDateLabel": "Start Date",
            "startDatePlaceholder": "Select start date (optional)", 
            "endDateLabel": "End Date",
            "endDatePlaceholder": "Select end date (optional)",
            "calendarGroupLabel": "Calendar Group",
            "calendarGroupPlaceholder": "Select calendar group (optional)",
            "excludeTimesLabel": "Exclude Times",
            "excludeTimesPlaceholder": "e.g., 08:00-09:00,12:00-13:00 (optional)",
            "excludeTimesHelp": "Exclude specific time ranges, format: HH:MM-HH:MM,HH:MM-HH:MM...",
            "timeoutLabel": "Execution Timeout (seconds)",
            "timeoutPlaceholder": "e.g., 300 (5 minutes)",
            "notificationSettingsHeader": "Notification Settings",
            "notifySuccessLabel": "Notify on Success",
            "notifyFailedLabel": "Notify on Failure",
            "noUsersSelectedOption": "No notifications",
            "retrySettingsHeader": "Failure Retry Settings",
            "maxRetriesLabel": "Maximum Retries",
            "retryIntervalLabel": "Retry Interval (seconds)",
            "retryIntervalMultiplierLabel": "Interval Multiplier (for exponential backoff)",
            "activeLabel": "Active",
            "taskTypes": {
                "bean": "Bean Task",
                "http": "HTTP Task",
                "shell": "Shell Script Task",
                "workflow": "Workflow Task"
            },
            "beanTaskFields": {
                "beanNameLabel": "Bean Name",
                "beanNamePlaceholder": "e.g., mySampleTask",
                "methodNameLabel": "Method Name",
                "methodNamePlaceholder": "e.g., executeSuccess",
                "beanParamsLabel": "Bean Parameters (JSON)",
                "beanParamsPlaceholder": "{\"key\": \"value\"}"
            },
            "shellTaskFields": {
                "scriptLabel": "Script Content or Path",
                "scriptPlaceholder": "e.g., echo 'Hello' or /path/to/script.sh",
                "inlineScriptLabel": "Is Inline Script (vs. Path)",
                "argsLabel": "Arguments (one per line)",
                "argsPlaceholder": "arg1\narg2 with spaces",
                "workDirLabel": "Working Directory (Optional)",
                "workDirPlaceholder": "e.g., /tmp",
                "note": "Note: Shell script parameters (script, arguments, workingDirectory, isInlineScript) will be stored as a JSON object in the generic \"Bean Parameters\" field in the database. The fields below (Bean Name, Method Name) are not used for Shell tasks."
            },
            "httpTaskFields": {
                "urlLabel": "HTTP URL",
                "urlPlaceholder": "https://example.com/api/data",
                "methodLabel": "HTTP Method",
                "headersLabel": "HTTP Headers (JSON)",
                "headersPlaceholder": "{\"Content-Type\": \"application/json\", \"X-API-KEY\":\"secret\"}",
                "bodyLabel": "HTTP Body (e.g., JSON for POST/PUT)",
                "bodyPlaceholder": "{\"key\": \"value\"}",
                "timeoutLabel": "Timeout (seconds)",
                "timeoutPlaceholder": "e.g., 30",
                "followRedirectsLabel": "Follow Redirects",
                "validateSslLabel": "Validate SSL Certificate",
                "connectTimeoutLabel": "Connect Timeout (ms, Optional)",
                "connectTimeoutPlaceholder": "e.g., 5000",
                "readTimeoutLabel": "Read Timeout (ms, Optional)",
                "readTimeoutPlaceholder": "e.g., 10000",
                "note": "Note: HTTP task parameters will be stored as a JSON object in the generic \"Bean Parameters\" field in the database."
            },
            "workflowTaskFields": {
                "nodesLabel": "Workflow Nodes",
                "addNodeBtn": "Add Node",
                "nodeTypeLabel": "Node Type",
                "nodeTypes": {
                    "start": "Start Node",
                    "end": "End Node",
                    "task": "Task Node",
                    "decision": "Decision Node",
                    "parallel": "Parallel Node",
                    "join": "Join Node"
                },
                "nodePropertiesLabel": "Node Properties",
                "nodeIdLabel": "Node ID",
                "nodeNameLabel": "Node Name",
                "decisionExpressionLabel": "Decision Expression",
                "taskRefLabel": "Task Reference",
                "selectTaskLabel": "Select Task to Add as Node:",
                "selectTaskPlaceholder": "-- Select a Task --",
                "nodeIdPlaceholder": "e.g., step1",
                "nodeNamePlaceholder": "e.g., Process Data",
                "nodeParamsLabel": "Node-Specific Parameters (JSON, Optional)",
                "nodeParamsPlaceholder": "{\"input_file\": \"/path/to/data.csv\"}",
                "nodeHelperCardHeader": "Workflow Node Helper",
                "addNodeToJsonBtn": "Add/Update Node in JSON Below",
                "addNodeNote": "This helper populates the 'Workflow Nodes (JSON)' field. Ensure Node IDs are unique within this workflow.",
                "globalParamsLabel": "Global Parameters (JSON, Optional)",
                "globalParamsPlaceholder": "{\"key\": \"globalValue\", \"api_url\": \"https://example.com\"}",
                "nodesJsonLabel": "Workflow Nodes (JSON)",
                "nodesJsonPlaceholder": "[{\"nodeId\":\"node1\", \"taskConfigId\":1, \"parameters\": {\"input\": \"${global_api_key}\"} }]",
                "nodesJsonNote": "Define tasks (nodes). Parameters can use templating like `${nodeA_status}` or `${global_param}`.",
                "visualizerHeader": "Workflow Visualizer",
                "refreshDagBtn": "Refresh View",
                "autoLayoutBtn": "Auto Layout",
                "formMode": "Form Mode",
                "graphMode": "Graph Mode",
                "formModeHelp": "Form Mode: Manage workflow via Node Helper and JSON editing areas above",
                "graphModeHelp": "Graph Mode: Drag nodes directly on graph, create and edit connections",
                "applyChangesBtn": "Apply Changes",
                "quickAddBtn": "Quick Add",
                "startNode": "Start Node",
                "endNode": "End Node",
                "processNode": "Process Node",
                "decisionNode": "Decision Node",
                "parallelNode": "Parallel Node",
                "dagContainerPlaceholderInitial": "Nodes are based on 'Workflow Nodes (JSON)' above. Edges from 'Workflow Edges (JSON)' below.",
                "dagContainerPlaceholderNoNodes": "No nodes to display. Please add workflow nodes first.",
                "dagContainerErrorNotArray": "Error: Workflow nodes must be an array.",
                "dagContainerErrorParseNodes": "Error parsing workflow nodes",
                "dagContainerErrorParseEdges": "Error parsing workflow edges",
                "edgesJsonLabel": "Workflow Edges (JSON)",
                "edgesJsonPlaceholder": "[{\"fromNodeId\":\"node1\", \"toNodeId\":\"node2\", \"expression\": \"${node1_status} == 'SUCCESS'\"}]",
                "edgesJsonNote": "Define transitions and conditions between nodes."
            },
            "nodeEditModal": {
                "title": "Edit Workflow Node: {{nodeId}}",
                "nodeIdLabel": "Node ID",
                "nodeNameLabel": "Node Display Name",
                "nodeNamePlaceholder": "Enter node display name",
                "taskIdLabel": "Task ID",
                "taskConfigIdLabel": "Task Config ID (Original Task)",
                "paramsLabel": "Node Parameters (JSON)",
                "nodeParamsLabel": "Node-Specific Parameters (JSON)",
                "paramsPlaceholder": "Enter node-specific parameters",
                "saveBtn": "Save Changes",
                "cancelBtn": "Cancel"
            },
            "edgeModal": {
                "titleNew": "New Edge: {{from}} → {{to}}",
                "titleEdit": "Edit Edge: {{from}} → {{to}}",
                "fromNodeLabel": "From Node",
                "toNodeLabel": "To Node",
                "expressionLabel": "Conditional Expression",
                "expressionPlaceholder": "${from_status} == 'SUCCESS'",
                "expressionHelp": "Can use source node output variables. Leave empty for unconditional transition.",
                "priorityLabel": "Priority",
                "priorityHelp": "When multiple edge conditions are met, priority determines execution order.",
                "priorityPlaceholder": "0",
                "saveBtn": "Save Edge",
                "cancelBtn": "Cancel",
                "deleteBtn": "Delete Edge"
            },
            "startDateLabel": "Start Date",
            "startDatePlaceholder": "Select start date (optional)", 
            "endDateLabel": "End Date",
            "endDatePlaceholder": "Select end date (optional)",
            "calendarGroupLabel": "Calendar Group",
            "calendarGroupPlaceholder": "Select calendar group (optional)",
            "excludeTimesLabel": "Exclude Times",
            "excludeTimesPlaceholder": "e.g., 08:00-09:00,12:00-13:00 (optional)",
            "excludeTimesHelp": "Exclude specific time ranges, format: HH:MM-HH:MM,HH:MM-HH:MM...",
            "timeoutLabel": "Execution Timeout (seconds)",
            "timeoutPlaceholder": "e.g., 300 (5 minutes)",
            "notificationSettingsHeader": "Notification Settings",
            "notifySuccessLabel": "Notify on Success",
            "notifyFailedLabel": "Notify on Failure",
            "noUsersSelectedOption": "No notifications"
        },
        "confirmations": {
            "deleteTask": "Are you sure you want to delete this task? This action cannot be undone.",
            "runTask": "Are you sure you want to run this task now?",
            "activateTask": "Are you sure you want to activate this task?",
            "deactivateTask": "Are you sure you want to deactivate this task?"
        },
        "notifications": {
            "taskSaved": "Task saved successfully",
            "taskDeleted": "Task deleted successfully",
            "taskActivated": "Task activated",
            "taskDeactivated": "Task deactivated",
            "taskRunning": "Task triggered for execution",
            "taskUpdateError": "Error updating task",
            "taskDeleteError": "Error deleting task",
            "taskRunError": "Error triggering task execution"
        },
        "feedback": {
            "errorLoadingTasks": "Error loading tasks: {{error}}",
            "taskSaved": "Task saved successfully!",
            "errorSaving": "Error saving task: {{error}}",
            "errorLoadingTaskDetails": "Error fetching task details: {{error}}",
            "confirmDelete": "Are you sure you want to delete task {{taskId}}?",
            "taskDeleted": "Task deleted successfully",
            "errorDeleting": "Error deleting task: {{error}}",
            "taskTriggered": "Task {{taskId}} triggered successfully!",
            "errorTriggering": "Error triggering task: {{error}}",
            "nodeHelperErrorParseNodes": "Error parsing Workflow Nodes JSON",
            "nodeEditErrorParse": "Error parsing workflowNodesJson for editing",
            "nodeEditNotFound": "Could not find node data for editing",
            "cycleDetected": "Warning: A cycle was detected in the workflow graph. This may cause infinite loops during execution. Proceed with caution.",
            "nodeUpdated": "Node {{nodeId}} updated.",
            "nodeAdded": "Node {{nodeId}} added.",
            "nodeParamsInvalid": "Invalid node parameters JSON.",
            "quickNodeAdded": "Added ",
            "jsonFormatted": "JSON formatted successfully.",
            "invalidJsonFormat": "Invalid JSON: Could not format. Please check syntax. {{error}}",
            "autoLayoutNotReady": "Auto layout feature is not ready yet",
            "edgeErrorParse": "Error parsing existing Workflow Edges JSON: {{message}}. Starting with new array.",
            "edgeDeleteError": "Failed to delete edge"
        },
        "edgeModal": {
            "title": "Edge Properties",
            "titleNew": "New Edge: {{from}} → {{to}}",
            "titleEdit": "Edit Edge: {{from}} → {{to}}",
            "expressionLabel": "Condition Expression (Optional)",
            "expressionPlaceholder": "${nodeId_status} == 'SUCCESS'",
            "expressionHelp": "Use expressions to determine if edge is activated. Examples:<br>- <code>${nodeA_status} == 'SUCCESS'</code> When node A succeeds<br>- <code>${nodeB_result} > 100</code> When node B result is over 100<br>Leave empty for unconditional activation.",
            "priorityLabel": "Priority (Integer, Optional, default 0)",
            "priorityPlaceholder": "0",
            "priorityHelp": "When multiple edges are activated, higher priority (larger number) edges are executed first.<br>Default value is 0, same priority edges are executed in order of creation.",
            "saveBtn": "Save Edge",
            "deleteBtn": "Delete Edge"
        },
        "nodeEditModal": {
            "title": "Edit Workflow Node: {{nodeId}}",
            "nodeIdLabel": "Node ID:",
            "taskConfigIdLabel": "Task Config ID (Original Task):",
            "nodeNameLabel": "Node Name (Display Name)",
            "nodeParamsLabel": "Node-Specific Parameters (JSON)",
            "saveBtn": "Save Changes"
        },
        "workflowGuide": {
            "title": "Graph Operations Guide",
            "item1": "Click Node: Select as source node",
            "item2": "Click Another Node: Create edge",
            "item3": "Click Edge: Edit edge conditions",
            "item4": "Double-click Node: Edit node properties",
            "closeTitle": "Close guide"
        }
    },
    "statisticsPage": {
        "title": "Task Statistics - Task Scheduler",
        "header": "Task Execution Statistics",
        "timeRange": {
            "label": "Time Range",
            "today": "Today",
            "yesterday": "Yesterday",
            "last7Days": "Last 7 Days",
            "last30Days": "Last 30 Days",
            "thisMonth": "This Month",
            "lastMonth": "Last Month",
            "custom": "Custom"
        },
        "stats": {
            "globalCountsHeader": "Global Counts",
            "slowestTasksHeader": "Top 5 Slowest Tasks (Average Successful Execution Time)",
            "taskBreakdownHeader": "Task Success/Failure Counts",
            "totalExecutions": "Total Executions",
            "successfulExecutions": "Successful Executions",
            "failedExecutions": "Failed Executions",
            "averageExecutionTime": "Average Execution Time",
            "successRate": "Success Rate",
            "taskName": "Task Name",
            "avgTime": "Average Time (ms)",
            "maxTime": "Max Time (ms)",
            "minTime": "Min Time (ms)",
            "successCount": "Success Count",
            "failureCount": "Failure Count",
            "noStatsAvailable": "No statistics available",
            "loading": "Loading...",
            "executionTrend": "Execution Trend",
            "successfulLabel": "Successful",
            "failedLabel": "Failed",
            "taskNameIdHeader": "Task Name (ID)",
            "successHeader": "Success",
            "failedHeader": "Failed",
            "noGlobalStats": "No global statistics available.",
            "noSlowestTasks": "No data for slowest tasks (or no successful executions recorded).",
            "noTaskBreakdown": "No task breakdown data available."
        },
        "feedback": {
            "errorLoadingGlobalStats": "Failed to load global stats.",
            "errorLoadingSlowestTasks": "Failed to load slowest tasks data.",
            "errorLoadingTaskBreakdown": "Failed to load task breakdown data."
        }
    },
    "logsPage": {
        "title": "Task Logs - Task Scheduler",
        "header": "Task Execution Statistics",
        "mainHeader": "Detailed Execution Logs",
        "stats": {
            "globalCountsHeader": "Global Counts",
            "slowestTasksHeader": "Top 5 Slowest Tasks (Average Successful Execution Time)",
            "taskBreakdownHeader": "Task Success/Failure Counts",
            "loading": "Loading..."
        },
        "detailedLogsHeader": "Detailed Logs",
        "filters": {
            "taskIdLabel": "Filter by Task ID:",
            "taskIdPlaceholder": "Enter Task ID",
            "statusLabel": "Filter by Status:",
            "allStatuses": "All Statuses",
            "applyBtn": "Apply Filters",
            "resetBtn": "Reset Filters"
        },
        "table": {
            "id": "ID",
            "taskId": "Task ID",
            "taskName": "Task Name",
            "startTime": "Start Time",
            "endTime": "End Time",
            "duration": "Duration (ms)",
            "status": "Status",
            "instanceId": "Instance ID",
            "actions": "Actions"
        },
        "logTable": {
            "logId": "Log ID",
            "taskId": "Task ID",
            "taskName": "Task Name",
            "status": "Status",
            "instanceId": "Executed By",
            "startTime": "Start Time",
            "endTime": "End Time",
            "duration": "Duration (ms)",
            "message": "Message"
        },
        "logStatuses": {
            "success": "SUCCESS",
            "failed": "FAILED",
            "running": "RUNNING",
            "timed_out": "TIMED OUT",
            "skipped": "SKIPPED",
            "cancelled": "CANCELLED"
        },
        "status": {
            "success": "Success",
            "failed": "Failed",
            "running": "Running"
        },
        "actions": {
            "viewDetails": "View Details"
        },
        "logDetailModal": {
            "title": "Log Entry Details",
            "messageLabel": "Message:",
            "exceptionLabel": "Exception:"
        },
        "logDetails": {
            "title": "Log Details",
            "taskInfo": "Task Information",
            "executionInfo": "Execution Information",
            "taskId": "Task ID",
            "taskName": "Task Name",
            "taskGroup": "Task Group",
            "taskType": "Task Type",
            "startTime": "Start Time",
            "endTime": "End Time",
            "duration": "Duration",
            "status": "Status",
            "instanceId": "Instance ID",
            "parameters": "Parameters",
            "output": "Output",
            "exception": "Exception",
            "stackTrace": "Stack Trace",
            "close": "Close"
        },
        "noLogs": "No logs found",
        "totalRecords": "Total {count} records",
        "feedback": {
            "errorLoadingLogs": "Error loading logs: {{error}}",
            "errorLoadingWorkflowInstance": "Error loading workflow instance details.",
            "noLogsFound": "No logs found for the current filter."
        },
        "workflowInstanceModal": {
            "title": "Workflow Instance Details",
            "instanceIdLabel": "Instance ID:",
            "logIdLabel": "Log ID:",
            "statusLabel": "Status:",
            "startTimeLabel": "Start Time:",
            "endTimeLabel": "End Time:",
            "durationLabel": "Duration:",
            "noNodesDefined": "No nodes defined for this workflow.",
            "nodeStatus": {
                "pending": "Pending",
                "running": "Running",
                "complete": "Complete",
                "skipped": "Skipped",
                "failed": "Failed"
            },
            "workflowName": "Workflow Name:",
            "instanceLogId": "Instance Log ID:",
            "selectedNodeHeader": "Selected Node Details:",
            "nodeId": "Node ID:",
            "nodeStatus": "Status:",
            "nodeLastLogId": "Last Log ID:",
            "nodeLastStartTime": "Last Start:",
            "nodeLastEndTime": "Last End:",
            "nodeLastMessage": "Last Message:"
        },
        "viewDetailsBtnTitle": "View Full Log Details",
        "viewDetailsBtn": "Details",
        "viewWorkflowBtnTitle": "View Workflow Details",
        "viewWorkflowBtn": "View Flow"
    },
    "calendarsPage": {
        "title": "Calendar Management - Task Scheduler",
        "header": "Calendar Management",
        "addCalendarBtn": "Add Calendar",
        "table": {
            "id": "ID",
            "name": "Calendar Name (Group)",
            "description": "Description (Remark)",
            "actions": "Actions",
            "manageDaysBtn": "Manage Days",
            "manageDaysBtnTitle": "Manage Days for this Calendar",
            "deleteCalendarBtnTitle": "Delete Calendar"
        },
        "calendarFormModal": {
            "titleAdd": "Add Calendar",
            "titleEdit": "Edit Calendar", 
            "nameLabel": "Calendar Name (Group)",
            "namePlaceholder": "Enter calendar name",
            "descriptionLabel": "Description (Remark)",
            "descriptionPlaceholder": "Enter description",
            "saveBtn": "Save Calendar"
        },
        "daysModal": {
            "title": "Manage Calendar Days: {{calendarName}}",
            "addNewDayHeader": "Add New Day Entry",
            "dateLabel": "Date",
            "datePlaceholder": "Event Date",
            "descriptionLabel": "Description",
            "descriptionPlaceholder": "Day Description",
            "isWorkingDayLabel": "Is Working Day?",
            "addDayBtn": "Add Day",
            "existingDaysHeader": "Existing Days",
            "table": {
                "date": "Date",
                "description": "Description",
                "workingDay": "Working Day?",
                "actions": "Actions"
            },
            "noDaysFound": "No day entries found for this calendar."
        },
        "dayTypes": {
            "working": "Yes",
            "nonWorking": "No"
        },
        "feedback": {
            "calendarSaved": "Calendar saved successfully!",
            "calendarDeleted": "Calendar deleted successfully!",
            "dayAdded": "Day entry added successfully!",
            "dayDeleted": "Day entry deleted successfully!",
            "dayExists": "Day entry for this date already exists.",
            "confirmDeleteCalendar": "Are you sure you want to delete calendar '{{name}}' (ID: {{id}})? This will also delete all its day entries.",
            "confirmDeleteDay": "Are you sure you want to delete this day entry?",
            "errorLoadingCalendars": "Error loading calendars: {{error}}",
            "errorSavingCalendar": "Error saving calendar: {{error}}",
            "errorDeletingCalendar": "Error deleting calendar: {{error}}",
            "errorLoadingDays": "Error loading days.",
            "errorLoadingDaysDetailed": "Error loading calendar days: {{error}}",
            "errorAddingDay": "Error adding day entry: {{error}}",
            "errorDeletingDay": "Error deleting day entry: {{error}}",
            "noCalendarSelected": "No calendar selected!",
            "editingNotSupported": "Editing existing calendars via this form is not supported."
        }
    },
    "usersPage": {
        "title": "User Management - Task Scheduler",
        "header": "User Management",
        "addUserBtn": "Add User",
        "table": {
            "id": "ID",
            "username": "Username",
            "fullName": "Full Name",
            "email": "Email",
            "role": "Role",
            "status": "Status",
            "actions": "Actions",
            "webhook": "Webhook",
            "createdAt": "Created At"
        },
        "modal": {
            "title": "Add/Edit User",
            "usernameLabel": "Username",
            "usernamePlaceholder": "Enter username",
            "fullNameLabel": "Full Name",
            "fullNamePlaceholder": "Enter full name",
            "emailLabel": "Email",
            "emailPlaceholder": "Enter email",
            "passwordLabel": "Password",
            "passwordPlaceholder": "Enter password",
            "passwordConfirmLabel": "Confirm Password",
            "passwordConfirmPlaceholder": "Enter password again",
            "roleLabel": "Role",
            "roles": {
                "admin": "Administrator",
                "user": "User",
                "viewer": "Viewer"
            },
            "activeLabel": "Active",
            "saveBtn": "Save",
            "closeBtn": "Close",
            "webhookLabel": "Webhook URL",
            "webhookPlaceholder": "Enter webhook URL",
            "notificationPreferencesLabel": "Notification Preferences",
            "notificationPreferencesPlaceholder": "Select notification preferences",
            "notificationPreferencesHelp": "Choose how you want to be notified when tasks succeed or fail",
            "isAdminLabel": "Administrator Privileges"
        },
        "confirmations": {
            "deleteUser": "Are you sure you want to delete this user? This action cannot be undone."
        },
        "notifications": {
            "userSaved": "User saved successfully",
            "userDeleted": "User deleted successfully",
            "userSaveError": "Error saving user",
            "userDeleteError": "Error deleting user",
            "passwordMismatch": "Passwords do not match"
        }
    }
}
